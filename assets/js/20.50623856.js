(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{218:function(a,t,s){"use strict";s.r(t);var n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"jvm系列：内存区域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm系列：内存区域","aria-hidden":"true"}},[a._v("#")]),a._v(" JVM系列：内存区域")]),a._v(" "),s("p",[a._v("Java虚拟机定义了在程序执行期间使用的各种运行时数据区域。 其中一些数据区域是在Java虚拟机启动时创建的，仅在Java虚拟机退出时销毁，线程共享。其他的数据域是基于每个线程的，这些线程数据域在线程创建时创建，线程销毁时销毁，线程私有。")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/91d614dc753c43db18ad8b314b118360",alt:"avatar"}})]),a._v(" "),s("h2",{attrs:{id:"程序计数器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#程序计数器","aria-hidden":"true"}},[a._v("#")]),a._v(" 程序计数器")]),a._v(" "),s("p",[a._v("记录正在执行的虚拟机字节码指令的地址，如果正在执行的是native方法，这个计数器值则为空。")]),a._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[a._v("TIP")]),a._v(" "),s("ul",[s("li",[a._v("内存较小，唯一一个在JVM中没有规定任何OutOfMemoryError情况的区域")]),a._v(" "),s("li",[a._v("字节码解释器工作时通过改变这个计数器的值来选取下一条需要执行的的字节码指令，分支，循环，跳转，异常处理，线程恢复等基础功能都依赖这个计数器来完成。")]),a._v(" "),s("li",[a._v("线程私有，由于Java虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个独立的程序计数器，各条线程之间的计数器互不影响，独立存储。")])])]),a._v(" "),s("h2",{attrs:{id:"java虚拟机栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java虚拟机栈","aria-hidden":"true"}},[a._v("#")]),a._v(" java虚拟机栈")]),a._v(" "),s("p",[a._v("虚拟机栈的栈元素是栈帧，每个方法在执行的同时都会创建一个栈帧，并且入栈；当这个方法返回时，其栈帧出栈。因此，虚拟机栈中栈帧的入栈顺序就是方法调用顺序。")]),a._v(" "),s("h3",{attrs:{id:"栈帧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栈帧","aria-hidden":"true"}},[a._v("#")]),a._v(" 栈帧")]),a._v(" "),s("p",[a._v("栈帧可以理解为一个方法的运行空间，主要有以下几部分组成：")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/c32bd362b7c8a97ca1a4005f01c0e043",alt:"avatar"}})]),a._v(" "),s("h4",{attrs:{id:"局部变量表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部变量表","aria-hidden":"true"}},[a._v("#")]),a._v(" 局部变量表")]),a._v(" "),s("p",[a._v("局部变量表是一组局部变量值存储空间，用于存放方法参数和方法内部定义的局部变量，其容量用Slot作为最小单位。")]),a._v(" "),s("h4",{attrs:{id:"操作数栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#操作数栈","aria-hidden":"true"}},[a._v("#")]),a._v(" 操作数栈")]),a._v(" "),s("p",[a._v("后入先出栈，由字节码指令往栈中存数据和取数据，栈中的任何一个元素都是可以任意的Java数据类型。和局部变量类似，操作数栈的最大深度也在编译的时候写入到Code属性的max_stacks数据项中。当一个方法刚开始执行的时候，这个方法的操作数栈是空的，在方法的执行过程中，会有各种字节码指令往操作数中写入和提取内容，也就是出栈/入栈操作。操作数栈中元素的数据类型必须与字节码指令的序列严格匹配 2，这由编译器在编译器期间进行验证，同时在类加载过程中的类检验阶段的数据流分析阶段要再次验证。另外我们说Java虚拟机的解释引擎是基于栈的执行引擎，其中的栈指的就是操作数栈。")]),a._v(" "),s("h4",{attrs:{id:"动态链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态链接","aria-hidden":"true"}},[a._v("#")]),a._v(" 动态链接")]),a._v(" "),s("p",[a._v("在运行时创建的直接引用称为动态链接。即程序在编译成.class文件后会有一系列的引用。这些是静态引用。而在运行时才创建的引用称为动态引用。")]),a._v(" "),s("h4",{attrs:{id:"方法出口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法出口","aria-hidden":"true"}},[a._v("#")]),a._v(" 方法出口")]),a._v(" "),s("p",[a._v("当一个方法开始之后，只有两种方式可以退出这个方法：")]),a._v(" "),s("ul",[s("li",[a._v("执行引擎遇到任意一个方法返回的字节码指令，也就是所谓的正常完成出口。")]),a._v(" "),s("li",[a._v("在方法执行的过程中遇到了异常，并且这个异常没有在方法内进行处理，也就是只要在本方法的异常表中没有搜索到匹配的异常处理器，就会导致方法退出，这种方式成为异常完成出口。")]),a._v(" "),s("li",[a._v("正常完成出口和异常完成出口的区别在于：通过异常完成出口退出的不会给他的上层调用者产生任何的返回值。\n无论通过哪种方式退出，在方法退出后都返回到该方法被调用的位置，方法正常退出时，调用者的pc计数器的值作为返回地址，而通过异常退出的，返回地址是要通过异常处理器表来确定，栈帧中一般不会保存这部分信息。本质上，方法的退出就是当前栈帧出栈的过程。")])]),a._v(" "),s("h3",{attrs:{id:"基于栈的代码执行示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于栈的代码执行示例","aria-hidden":"true"}},[a._v("#")]),a._v(" 基于栈的代码执行示例")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[a._v("package")]),a._v(" com"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("itxiaoer"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("jvm"),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{attrs:{class:"token comment"}},[a._v("/**\n * @author : liuyk\n */")]),a._v("\n"),s("span",{attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),s("span",{attrs:{class:"token class-name"}},[a._v("Foo")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n\n    "),s("span",{attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("add")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("1")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("2")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{attrs:{class:"token keyword"}},[a._v("int")]),a._v(" c "),s("span",{attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{attrs:{class:"token number"}},[a._v("3")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a "),s("span",{attrs:{class:"token operator"}},[a._v("+")]),a._v(" b"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{attrs:{class:"token operator"}},[a._v("*")]),a._v(" c"),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),s("span",{attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),s("span",{attrs:{class:"token function"}},[a._v("main")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("String"),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" args"),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        System"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{attrs:{class:"token function"}},[a._v("println")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token function"}},[a._v("add")]),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),s("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])])]),s("p",[a._v("使用javap指令查看字节码")]),a._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("$ javap -c Foo.class \n\nCompiled from "),s("span",{attrs:{class:"token string"}},[a._v('"Foo.java"')]),a._v("\npublic class com.itxiaoer.jvm.Foo "),s("span",{attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  public com.itxiaoer.jvm.Foo"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    Code:\n       0: aload_0\n       1: invokespecial "),s("span",{attrs:{class:"token comment"}},[a._v('#1                  // Method java/lang/Object."<init>":()V')]),a._v("\n       4: "),s("span",{attrs:{class:"token keyword"}},[a._v("return")]),a._v("\n\n  public static int add"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    Code:\n        0: iconst_1\n        1: istore_0\n        2: iconst_2\n        3: istore_1\n        4: iconst_3\n        5: istore_2\n        6: iload_0\n        7: iload_1\n        8: iadd\n        9: iload_2\n        10: imul\n        11: ireturn\n\n  public static void main"),s("span",{attrs:{class:"token punctuation"}},[a._v("(")]),a._v("java.lang.String"),s("span",{attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    Code:\n       0: getstatic     "),s("span",{attrs:{class:"token comment"}},[a._v("#2                  // Field java/lang/System.out:Ljava/io/PrintStream;")]),a._v("\n       3: invokestatic  "),s("span",{attrs:{class:"token comment"}},[a._v("#3                  // Method add:()I")]),a._v("\n       6: invokevirtual "),s("span",{attrs:{class:"token comment"}},[a._v("#4                  // Method java/io/PrintStream.println:(I)V")]),a._v("\n       9: "),s("span",{attrs:{class:"token keyword"}},[a._v("return")]),a._v("\n"),s("span",{attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("p",[a._v("接下来分析add方法执行过程")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/9c7cc61405c36b8d0db7641273f5c390",alt:"avatar"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/17d7383638afdbf211cf61a61bc41c67",alt:"avatar"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/09af144d37fc7f4f7ceea5fa6e161d74",alt:"avatar"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/dbca3a2d79a437130991edabf4bee220",alt:"avatar"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/e73ebd3d67a70fd78f6be6aeb53d51bd",alt:"avatar"}})]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/7674ac3d9f52940315b7209c816402d9",alt:"avatar"}})]),a._v(" "),s("h2",{attrs:{id:"本地方法栈"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#本地方法栈","aria-hidden":"true"}},[a._v("#")]),a._v(" 本地方法栈")]),a._v(" "),s("p",[a._v("和虚拟机栈类似，为本地方法服务")]),a._v(" "),s("h2",{attrs:{id:"堆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#堆","aria-hidden":"true"}},[a._v("#")]),a._v(" 堆")]),a._v(" "),s("h2",{attrs:{id:"方法区"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#方法区","aria-hidden":"true"}},[a._v("#")]),a._v(" 方法区")]),a._v(" "),s("h2",{attrs:{id:"直接内存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接内存","aria-hidden":"true"}},[a._v("#")]),a._v(" 直接内存")])])}],!1,null,null,null);r.options.__file="jvm-01-memory-areas-back.md";t.default=r.exports}}]);