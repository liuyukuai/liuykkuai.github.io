(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{172:function(t,_,v){},177:function(t,_,v){"use strict";var e=v(172);v.n(e).a},210:function(t,_,v){"use strict";v.r(_);v(177);var e=v(0),r=Object(e.a)({},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),v("p",[t._v("Linux下常用的性能分析工具，主要用来监控系统实时负载率、进程的资源占用率及其它各项系统状态属性是否正常。")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),t._m(9),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),v("p",[t._v("第一行是任务队列信息，同 uptime 命令的执行结果")]),t._v(" "),t._m(13),t._v(" "),v("p",[v("router-link",{attrs:{to:"/performance/linux-uptime.html"}},[t._v("更多uptime介绍")])],1),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),v("p",[t._v("第一行是物理内存使用，第二行是虚拟内存使用(交换空间)，和free命令相似。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),v("p",[t._v("以下为所有进程信息，包括不默认显示的")]),t._v(" "),t._m(26),t._v(" "),t._m(27)])},[function(){var t=this.$createElement,_=this._self._c||t;return _("h1",{attrs:{id:"linux命令：top"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#linux命令：top","aria-hidden":"true"}},[this._v("#")]),this._v(" Linux命令：top")])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"环境"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#环境","aria-hidden":"true"}},[this._v("#")]),this._v(" 环境")])},function(){var t=this.$createElement,_=this._self._c||t;return _("ul",[_("li",[this._v("CentOS Linux release 7.3.1611 (Core)")])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"功能"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#功能","aria-hidden":"true"}},[this._v("#")]),this._v(" 功能")])},function(){var t=this.$createElement,_=this._self._c||t;return _("ul",[_("li",[this._v("命令格式")])])},function(){var t=this.$createElement,_=this._self._c||t;return _("div",{staticClass:"language-shell extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[_("span",{attrs:{class:"token function"}},[this._v("top")]),this._v(" \n")])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("ul",[_("li",[this._v("参数说明")])])},function(){var t=this.$createElement,_=this._self._c||t;return _("div",{staticClass:"language-shell extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[this._v("-b： 批处理模式。通常用在脚本中，不断输出信息\n-c： 显示包含路径的命令行，而不只是程序名称\n-d： 指定信息刷新的时间间隔（默认是5s）\n-i： 不显示闲置或者僵死进程\n-n： 指定显示的次数。一般与-b搭配使用\n-p： 指定进程号。可以指定多个pid\n-s： 使top命令在安全模式中运行\n-S： 指定累积模式，每个进程的CPU时间为该进程及关闭的子进程锁累加的时间\n-u： 指定用户名\n")])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("ul",[_("li",[this._v("交互命令")])])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[t._v("c： 显示完整的命令\nd： 更改刷新频率\nf： 增加或减少要显示的列"),v("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("选中的会变成大写并加*号"),v("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nF： 选择排序的列\nh： 显示帮助画面\nH： 显示线程\ni： 忽略闲置和僵死进程\nk： 通过给予一个PID和一个signal来终止一个进程。（默认signal为15。在安全模式中此命令被屏蔽）\nl:  显示平均负载以及启动时间（即显示影藏第一行）\nm： 显示内存信息\nM： 根据内存资源使用大小进行排序\nN： 按PID由高到低排列\no： 改变列显示的顺序\nO： 选择排序的列，与F完全相同\nP： 根据CPU资源使用大小进行排序\nq： 退出top命令\nr： 修改进程的nice值"),v("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("优先级"),v("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("。优先级默认为10，正值使优先级降低，反之则提高的优先级\ns： 设置刷新频率（默认单位为秒，如有小数则换算成ms）。默认值是5s，输入0值则系统将不断刷新\nS： 累计模式（把已完成或退出的子进程占用的CPU时间累计到父进程的MITE+ ）\nT： 根据进程使用CPU的累积时间排序\nt： 显示进程和CPU状态信息（即显示影藏CPU行）\nu： 指定用户进程\nW： 将当前设置写入~/.toprc文件，下次启动自动调用toprc文件的设置\n"),v("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("： 向前翻页\n"),v("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("： 向后翻页\n?： 显示帮助画面\n1"),v("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("数字1"),v("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("： 显示每个CPU的详细情况\n")])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h2",{attrs:{id:"输出结果"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#输出结果","aria-hidden":"true"}},[this._v("#")]),this._v(" 输出结果")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"language-shell extra-class"},[v("pre",{pre:!0,attrs:{class:"language-shell"}},[v("code",[t._v("$ "),v("span",{attrs:{class:"token function"}},[t._v("top")]),t._v("\n\n"),v("span",{attrs:{class:"token function"}},[t._v("top")]),t._v(" - 22:46:56 up 3 days, 13:22,  3 users,  load average: 0.00, 0.02, 0.05\nTasks:  65 total,   1 running,  64 sleeping,   0 stopped,   0 zombie\n%Cpu"),v("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),v("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(":  0.3 us,  0.0 sy,  0.0 ni, 99.7 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st\nKiB Mem "),v("span",{attrs:{class:"token keyword"}},[t._v(":")]),t._v("  1016164 total,   388300 free,    58204 used,   569660 buff/cache\nKiB Swap:        0 total,        0 free,        0 used.   799148 avail Mem \n\n  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                                                               \n  813 root      20   0   31636   3100   2484 S  0.3  0.3   1:17.38 AliYunDunUpdate                                                       \n    1 root      20   0   43172   3400   2284 S  0.0  0.3   0:02.58 systemd                                                               \n    2 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kthreadd                                                              \n    3 root      20   0       0      0      0 S  0.0  0.0   0:01.07 ksoftirqd/0                                                           \n    5 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kworker/0:0H                                                          \n    6 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kworker/u2:0                                                          \n    7 root      rt   0       0      0      0 S  0.0  0.0   0:00.00 migration/0                                                           \n    8 root      20   0       0      0      0 S  0.0  0.0   0:00.00 rcu_bh                                                                \n    9 root      20   0       0      0      0 S  0.0  0.0   0:07.95 rcu_sched                                                             \n   10 root      rt   0       0      0      0 S  0.0  0.0   0:01.48 watchdog/0                                                            \n   12 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kdevtmpfs                                                             \n   13 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 netns                                                                 \n   14 root      20   0       0      0      0 S  0.0  0.0   0:00.06 khungtaskd                                                            \n   15 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 writeback                                                             \n   16 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kintegrityd                                                           \n   17 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 bioset                                                                \n   18 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kblockd                                                               \n   19 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 md                                                                    \n   25 root      20   0       0      0      0 S  0.0  0.0   0:00.00 kswapd0                                                               \n   26 root      25   5       0      0      0 S  0.0  0.0   0:00.00 ksmd                                                                  \n   27 root      39  19       0      0      0 S  0.0  0.0   0:00.83 khugepaged                                                            \n   28 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 crypto                                                                \n   36 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kthrotld                                                              \n   38 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kmpath_rdacd                                                          \n   39 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kpsmoused                                                             \n   40 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 ipv6_addrconf                                                         \n   59 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 deferwq                                                               \n  103 root      20   0       0      0      0 S  0.0  0.0   0:00.01 kauditd                                                               \n  229 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 ata_sff                                                               \n  234 root      20   0       0      0      0 S  0.0  0.0   0:00.00 scsi_eh_0                                                             \n  235 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 scsi_tmf_0                                                            \n  236 root      20   0       0      0      0 S  0.0  0.0   0:00.00 scsi_eh_1                                                             \n  237 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 scsi_tmf_1 \n\n")])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"第一行信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第一行信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 第一行信息")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("值")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("22:46:56")]),t._v(" "),v("td",[t._v("系统当前时间")])]),t._v(" "),v("tr",[v("td",[t._v("3 days, 13:22")]),t._v(" "),v("td",[t._v("系统运行时间")])]),t._v(" "),v("tr",[v("td",[t._v("2 users")]),t._v(" "),v("td",[t._v("当前登录用户数")])]),t._v(" "),v("tr",[v("td",[t._v("load average: 0.00, 0.02, 0.05")]),t._v(" "),v("td",[t._v("系统平均负载，三个数值分别为  1分钟、5分钟、15分钟前到现在的平均值。")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"第二行为进程信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第二行为进程信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 第二行为进程信息")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("值")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("Tasks:  65 total")]),t._v(" "),v("td",[t._v("进程总数")])]),t._v(" "),v("tr",[v("td",[t._v("1 running")]),t._v(" "),v("td",[t._v("正在运行的进程数")])]),t._v(" "),v("tr",[v("td",[t._v("28 sleeping")]),t._v(" "),v("td",[t._v("睡眠的进程数")])]),t._v(" "),v("tr",[v("td",[t._v("0 stopped")]),t._v(" "),v("td",[t._v("停止的进程数")])]),t._v(" "),v("tr",[v("td",[t._v("0 zombie")]),t._v(" "),v("td",[t._v("僵尸进程数")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("div",{staticClass:"tip custom-block"},[_("p",{staticClass:"custom-block-title"},[this._v("僵尸进程")]),this._v(" "),_("p",[this._v("一个进程使用fork创建子进程，如果子进程退出，而父进程并没有调用wait或waitpid获取子进程的状态信息，那么子进程的进程描述符仍然保存在系统中。这种进程称之为僵死进程。")])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"第三行cpu的信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第三行cpu的信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 第三行CPU的信息")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("值")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("0.3 us")]),t._v(" "),v("td",[t._v("用户空间占用CPU百分比")])]),t._v(" "),v("tr",[v("td",[t._v("0.0 sy")]),t._v(" "),v("td",[t._v("内核空间占用CPU百分比")])]),t._v(" "),v("tr",[v("td",[t._v("0.0% ni")]),t._v(" "),v("td",[t._v("用户进程空间内改变过优先级的进程占用CPU百分比")])]),t._v(" "),v("tr",[v("td",[t._v("99.7% id")]),t._v(" "),v("td",[t._v("空闲CPU百分比")])]),t._v(" "),v("tr",[v("td",[t._v("0.0% wa")]),t._v(" "),v("td",[t._v("等待输入输出的CPU时间百分比")])]),t._v(" "),v("tr",[v("td",[t._v("0.0% hi")]),t._v(" "),v("td",[t._v("处理硬件中断的CPU时间百分比")])]),t._v(" "),v("tr",[v("td",[t._v("0.0% si")]),t._v(" "),v("td",[t._v("处理软件中断的CPU时间百分比")])]),t._v(" "),v("tr",[v("td",[t._v("0.0% st")]),t._v(" "),v("td",[t._v("这个虚拟机被虚拟化软件(KVM)偷去的CPU时间百分比")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("div",{staticClass:"tip custom-block"},[_("p",{staticClass:"custom-block-title"},[this._v("说明")]),this._v(" "),_("ul",[_("li",[this._v("st：如果当前处于一个KVM下的vm，实际上KVM也是要消耗一部分CPU处理时间的")])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"第四、五为内存信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#第四、五为内存信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 第四、五为内存信息")])},function(){var t=this.$createElement,_=this._self._c||t;return _("ul",[_("li",[this._v("物理内存")])])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("值")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("1016164 total")]),t._v(" "),v("td",[t._v("物理内存总量，当前为1016164KB")])]),t._v(" "),v("tr",[v("td",[t._v("388300 free")]),t._v(" "),v("td",[t._v("物理内存空闲量，当前为388300KB")])]),t._v(" "),v("tr",[v("td",[t._v("58204 used")]),t._v(" "),v("td",[t._v("物理内存已经使用量，当前为58204KB")])]),t._v(" "),v("tr",[v("td",[t._v("569660 buff/cache")]),t._v(" "),v("td",[t._v("用于缓冲和缓存的内存空间")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("ul",[_("li",[this._v("虚拟内存")])])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("值")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("0 total")]),t._v(" "),v("td",[t._v("虚拟内存总量，当前为0KB")])]),t._v(" "),v("tr",[v("td",[t._v("0 free")]),t._v(" "),v("td",[t._v("虚拟内存空闲量，当前为0KB")])]),t._v(" "),v("tr",[v("td",[t._v("0 used")]),t._v(" "),v("td",[t._v("虚拟内存已经使用量，当前为0KB")])]),t._v(" "),v("tr",[v("td",[t._v("799148 avail Mem")]),t._v(" "),v("td",[t._v("可用内存空间，当前799148KB")])])])])},function(){var t=this.$createElement,_=this._self._c||t;return _("h3",{attrs:{id:"进程信息"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#进程信息","aria-hidden":"true"}},[this._v("#")]),this._v(" 进程信息")])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("table",[v("thead",[v("tr",[v("th",[t._v("列名")]),t._v(" "),v("th",[t._v("含义")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("PID")]),t._v(" "),v("td",[t._v("进程id")])]),t._v(" "),v("tr",[v("td",[t._v("PPID")]),t._v(" "),v("td",[t._v("父进程id")])]),t._v(" "),v("tr",[v("td",[t._v("USER")]),t._v(" "),v("td",[t._v("进程所有者的用户名")])]),t._v(" "),v("tr",[v("td",[t._v("RUSER")]),t._v(" "),v("td",[t._v("Real user name")])]),t._v(" "),v("tr",[v("td",[t._v("UID")]),t._v(" "),v("td",[t._v("进程所有者的用户id")])]),t._v(" "),v("tr",[v("td",[t._v("GROUP")]),t._v(" "),v("td",[t._v("进程所有者的组名")])]),t._v(" "),v("tr",[v("td",[t._v("TTY")]),t._v(" "),v("td",[t._v("启动进程的终端名")])]),t._v(" "),v("tr",[v("td",[t._v("PR")]),t._v(" "),v("td",[t._v("优先级")])]),t._v(" "),v("tr",[v("td",[t._v("NI")]),t._v(" "),v("td",[t._v("nice值。负值表示高优先级，正值表示低优先级")])]),t._v(" "),v("tr",[v("td",[t._v("P")]),t._v(" "),v("td",[t._v("最后使用的CPU，仅在多CPU环境下有意义")])]),t._v(" "),v("tr",[v("td",[t._v("%CPU")]),t._v(" "),v("td",[t._v("上次更新到现在的CPU时间占用百分比")])]),t._v(" "),v("tr",[v("td",[t._v("TIME")]),t._v(" "),v("td",[t._v("进程使用的CPU时间总计，单位秒")])]),t._v(" "),v("tr",[v("td",[t._v("TIME+")]),t._v(" "),v("td",[t._v("进程使用的CPU时间总计，单位1/100秒")])]),t._v(" "),v("tr",[v("td",[t._v("%MEM")]),t._v(" "),v("td",[t._v("进程使用的物理内存百分比")])]),t._v(" "),v("tr",[v("td",[t._v("VIRT")]),t._v(" "),v("td",[t._v("进程使用的虚拟内存总量，单位kb。VIRT=SWAP+RES")])]),t._v(" "),v("tr",[v("td",[t._v("SWAP")]),t._v(" "),v("td",[t._v("进程使用的虚拟内存中，被换出的大小，单位kb。 SWAP = VIRT - RES")])]),t._v(" "),v("tr",[v("td",[t._v("RES")]),t._v(" "),v("td",[t._v("进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA(应用程序真的使用的内存)")])]),t._v(" "),v("tr",[v("td",[t._v("CODE")]),t._v(" "),v("td",[t._v("可执行代码占用的物理内存大小，单位kb")])]),t._v(" "),v("tr",[v("td",[t._v("DATA")]),t._v(" "),v("td",[t._v("可执行代码以外的部分(数据段+栈)占用的物理内存大小，单位kb")])]),t._v(" "),v("tr",[v("td",[t._v("SHR")]),t._v(" "),v("td",[t._v("共享内存大小，单位kb")])]),t._v(" "),v("tr",[v("td",[t._v("nFLT")]),t._v(" "),v("td",[t._v("进程启动以来页面错误的次数(这个值过高意味着进程从磁盘读取大量资源)")])]),t._v(" "),v("tr",[v("td",[t._v("nDRT")]),t._v(" "),v("td",[t._v("最后一次写入到现在被修改过的页面数。(通常小于10或者为0)")])]),t._v(" "),v("tr",[v("td",[t._v("S")]),t._v(" "),v("td",[t._v("进程状态")])]),t._v(" "),v("tr",[v("td",[t._v("COMMAND")]),t._v(" "),v("td",[t._v("命令名/命令行")])]),t._v(" "),v("tr",[v("td",[t._v("WCHAN")]),t._v(" "),v("td",[t._v("若该进程在睡眠，则显示睡眠中的系统函数名")])])])])},function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("div",{staticClass:"tip custom-block"},[v("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),v("p",[t._v("进程状态")]),t._v(" "),v("ul",[v("li",[t._v("D：不可中断的睡眠状态")]),t._v(" "),v("li",[t._v("R：运行")]),t._v(" "),v("li",[t._v("S：睡眠")]),t._v(" "),v("li",[t._v("T：跟踪/停止")]),t._v(" "),v("li",[t._v("Z：僵尸进程")])])])}],!1,null,null,null);r.options.__file="linux-top.md";_.default=r.exports}}]);