(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{215:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"jvm系列：判断对象是否存活"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jvm系列：判断对象是否存活","aria-hidden":"true"}},[t._v("#")]),t._v(" JVM系列：判断对象是否存活")]),t._v(" "),s("h2",{attrs:{id:"对象已死？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#对象已死？","aria-hidden":"true"}},[t._v("#")]),t._v(" 对象已死？")]),t._v(" "),s("p",[t._v("堆中几乎存放着java中的所有对象，垃圾回收器在对堆进行回收前，第一件事就要要判断哪些对象存活，哪些对象死亡。\n故如何判断一个Java对象是否存活对于垃圾回收、防止内存泄漏等十分重要。")]),t._v(" "),s("h2",{attrs:{id:"判断方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 判断方式")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("判断对象是否存活有两种方法")]),t._v(" "),s("ul",[s("li",[t._v("引用计数法")]),t._v(" "),s("li",[t._v("可达性分析算法")])])]),t._v(" "),s("h3",{attrs:{id:"引用计数法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#引用计数法","aria-hidden":"true"}},[t._v("#")]),t._v(" 引用计数法")]),t._v(" "),s("h4",{attrs:{id:"算法思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法思路","aria-hidden":"true"}},[t._v("#")]),t._v(" 算法思路")]),t._v(" "),s("p",[t._v("给对象添加一个引用计数器，每当有一个地方引用该对象时，计数器+1，引用失效-1。当计数器不为0时，该对象存活，否则为死亡。")]),t._v(" "),s("h4",{attrs:{id:"优点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#优点","aria-hidden":"true"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),s("ul",[s("li",[t._v("算法简单")]),t._v(" "),s("li",[t._v("算法高效")])]),t._v(" "),s("h4",{attrs:{id:"缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#缺点","aria-hidden":"true"}},[t._v("#")]),t._v(" 缺点")]),t._v(" "),s("ul",[s("li",[t._v("无法解决对象间循环引用问题")])]),t._v(" "),s("h4",{attrs:{id:"案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例","aria-hidden":"true"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),s("ul",[s("li",[t._v("背景")])]),t._v(" "),s("p",[t._v("有两个对象，objA和objB，都有属性instance，这个两个对象相互引用，除此之外没有任何别的引用。")]),t._v(" "),s("ul",[s("li",[t._v("代码清单")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("package")]),t._v(" com"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itxiaoer"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("demo"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jvm"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/**\n * @author : liuyk\n */")]),t._v("\n"),s("span",{attrs:{class:"token annotation punctuation"}},[t._v("@SuppressWarnings")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"all"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ObjectIsLive")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" ObjectIsLive instance "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token comment"}},[t._v("/**\n     * 这个成员作用在于占用内存，以便GC日志中看清楚是否被回收过\n     */")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("byte")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" bigSize "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("byte")]),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token number"}},[t._v("2")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1024")]),t._v(" "),s("span",{attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("1024")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n        ObjectIsLive objA "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ObjectIsLive")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        ObjectIsLive objB "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("ObjectIsLive")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        objA"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" objB"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        objB"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("instance "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" objA"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        objA "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        objB "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" null"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{attrs:{class:"token comment"}},[t._v("// 假定这里执行GC,objA和ojbB是否能被回收掉？")]),t._v("\n        System"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("gc")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("说明")])]),t._v(" "),s("p",[t._v("实际上这两个对象已经不可能再被访问，应该要被垃圾收集器进行回收，但因为他们相互引用，所以导致计数器不为0，这导致引用计数算法无法通知垃圾收集器回收该两个对象")]),t._v(" "),s("ul",[s("li",[t._v("运行结果")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[GC (System.gc()) [PSYoungGen: 8032K->624K(76288K)] 8032K->632K(251392K), 0.0017460 secs] [Times: user=0.01 sys=0.00, real=0.00 secs] \n[Full GC (System.gc()) [PSYoungGen: 624K->0K(76288K)] [ParOldGen: 8K->396K(175104K)] 632K->396K(251392K), [Metaspace: 3159K->3159K(1056768K)], 0.0047056 secs] [Times: user=0.02 sys=0.00, real=0.01 secs] \nHeap\n PSYoungGen      total 76288K, used 1966K [0x000000076ab00000, 0x0000000770000000, 0x00000007c0000000)\n  eden space 65536K, 3% used [0x000000076ab00000,0x000000076aceba38,0x000000076eb00000)\n  from space 10752K, 0% used [0x000000076eb00000,0x000000076eb00000,0x000000076f580000)\n  to   space 10752K, 0% used [0x000000076f580000,0x000000076f580000,0x0000000770000000)\n ParOldGen       total 175104K, used 396K [0x00000006c0000000, 0x00000006cab00000, 0x000000076ab00000)\n  object space 175104K, 0% used [0x00000006c0000000,0x00000006c0063170,0x00000006cab00000)\n Metaspace       used 3166K, capacity 4496K, committed 4864K, reserved 1056768K\n  class space    used 347K, capacity 388K, committed 512K, reserved 1048576K\n\n")])])]),s("p",[t._v("从运行结果看，GC日志中包含8032K->624K，说明虚拟机并不会因为相互引用而不回收，也说明虚拟机并不是通过引用计数法来判断对象是否存活的。")]),t._v(" "),s("h2",{attrs:{id:"可达性分析算法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可达性分析算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 可达性分析算法")]),t._v(" "),s("h3",{attrs:{id:"算法思路-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法思路-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 算法思路")]),t._v(" "),s("p",[t._v('通过一系列的称为"GC ROOT"的对象作为起点，从这些节点往下搜索，搜索所走的路径称为引用链，当一个对象到GC ROOT没有任何引用链相连，就认为此对象是不可用的。')]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/514f6d2fd5715ac371c60ccd103c1b8c",alt:"avatar"}})]),t._v(" "),s("h3",{attrs:{id:"gc-root"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gc-root","aria-hidden":"true"}},[t._v("#")]),t._v(" GC ROOT")]),t._v(" "),s("p",[t._v("可作为GC ROOTS对象包括下面几种")]),t._v(" "),s("ul",[s("li",[t._v("虚拟机栈（栈帧中的本地变量表）引用的对象")]),t._v(" "),s("li",[t._v("方法区静态属性引用的对象")]),t._v(" "),s("li",[t._v("方法区常量引用的对象")]),t._v(" "),s("li",[t._v("本地方法栈中JNI（一般来说指Native方法）引用的对象")])]),t._v(" "),s("h2",{attrs:{id:"生成还是死亡"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生成还是死亡","aria-hidden":"true"}},[t._v("#")]),t._v(" 生成还是死亡")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v('在不可达分析算法中不可达的对象，也并非"非死不可"的。这时候它们处于"缓刑"状态')]),t._v(" "),s("li",[t._v("真正要宣告一个对象的死亡，至少要经历两次标记的过程")])])]),t._v(" "),s("p",[s("img",{attrs:{src:"http://img.itxiaoer.com/c012d86c0726cf8e3b644371ba3a21f7",alt:"avatar"}})]),t._v(" "),s("h3",{attrs:{id:"第一次标记-筛选"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一次标记-筛选","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一次标记&筛选")]),t._v(" "),s("p",[t._v('对象在不可达分析算法判断为不可达后，将该对象放在"即将回收"的集合，在进行第一次标记和筛选')]),t._v(" "),s("h4",{attrs:{id:"筛选标准"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#筛选标准","aria-hidden":"true"}},[t._v("#")]),t._v(" 筛选标准")]),t._v(" "),s("p",[t._v("该对象是否有必要执行finalize()方法。")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("如何判断有必要")]),t._v(" "),s("p",[t._v("当对象没有覆盖finalize()方法，或者finalize()已经被虚拟机调用过，这两种情况视为没有必要执行。")])]),t._v(" "),s("ul",[s("li",[t._v("有必要执行")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("p",[t._v("当对象判断为有必要执行finalize()方法，那么这个对象将会放置在一个叫F-QUEUE的队列中，并稍后有一个有虚拟机自动建立，低优先级的Finalizer线程去执行它。")])]),t._v(" "),s("ul",[s("li",[t._v("没必要执行")])]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("p",[t._v('当对象判断为没必要执行finalize()方法，那么这个对象将留在"即将回收"的集合等待被回收')])]),t._v(" "),s("h3",{attrs:{id:"第二次标记-筛选"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二次标记-筛选","aria-hidden":"true"}},[t._v("#")]),t._v(" 第二次标记&筛选")]),t._v(" "),s("p",[t._v("经过第一次标记&筛选，有必要执行的对象被放在F-QUEUE队列中，Finalizer线程去执行队列中对象的finalize()方法")]),t._v(" "),s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ul",[s("li",[t._v("finalize()只会执行一次")]),t._v(" "),s("li",[t._v("但并不承诺等待finalize()运行结束。这是为了防止 finalize()执行缓慢 / 停止 使得 F-Queue队列其他对象永久等待")])])]),t._v(" "),s("h4",{attrs:{id:"筛选标准-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#筛选标准-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 筛选标准")]),t._v(" "),s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[t._v("说明")]),t._v(" "),s("ul",[s("li",[t._v("finalize()方法是对象逃脱死亡命运的最后一次机会")]),t._v(" "),s("li",[t._v('如果在finalize()成功拯救了自己，那么第二次标记就会将该对象移除"即将回收"的集合，反之，留在集合等待被回收。')])])]),t._v(" "),s("h2",{attrs:{id:"参考资料"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),s("ul",[s("li",[t._v("深入理解Java虚拟机：JVM高级特性与最佳实践（最新第二版）")])])])}],!1,null,null,null);e.options.__file="jvm-01-object-is-live.md";a.default=e.exports}}]);