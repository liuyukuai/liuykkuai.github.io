(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{184:function(t,n,e){"use strict";e.r(n);var s=e(0),_=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#需求","aria-hidden":"true"}},[t._v("#")]),t._v(" 需求")]),t._v(" "),e("h2",{attrs:{id:"实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),e("ul",[e("li",[t._v("每个业务赋予唯一的ID，这个ID通过不同的操作的不同内容来生成唯一的全局ID")]),t._v(" "),e("li",[t._v("相同的操作相同的内容生成相同的ID，不同的操作生成不同的全局ID")]),t._v(" "),e("li",[t._v("满足分布式系统要求，全局ID需要存储在外部储存中，选用redis，存储格式KEY + VALUE")])]),t._v(" "),e("p",[t._v("ID生成规则：\nKEY: APP_KEY(服务名称)+业务特性内容 = 唯一标识的字符串(trans_contents)，然后对该字符串加密（MD5）;\nVALUE: 当前时间+ trans_contents")]),t._v(" "),e("p",[t._v("执行流程：")]),t._v(" "),e("ul",[e("li",[t._v("在业务执行流程前，通过配置或者生成一个唯一的trans_contents传入幂等性框架")]),t._v(" "),e("li",[t._v("根据传入的trans_contents通过MD5生成全局的ID")]),t._v(" "),e("li",[t._v("将全局ID作为key，当前时间+trans_contents作为VALUE使用setNx存入redis，通过结果判断是否可以执行，若能则执行业务方法，不能返回结果，\n结果如何定义？过期时间如何设置？")]),t._v(" "),e("li",[t._v("通过业务返回的结果判断是否成功，")])])])}],!1,null,null,null);_.options.__file="Idempotent.md";n.default=_.exports}}]);